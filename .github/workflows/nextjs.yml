# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy to GH Pages

on:
  # Runs on pushes targeting the feature branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    environment:
     # name: ${{ inputs.deploy_to_github_pages == true && 'github-pages' || 'static-output' }}
     # url: ${{ inputs.deploy_to_github_pages == true && steps.deployment.outputs.page_url || ''}}
     name: 'github-pages'
     url: steps.deployment.outputs.page_url
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        id: configure-pages
        uses: actions/configure-pages@v5
        #with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          #static_site_generator: static
      - name: Parsing static.json
        id: static
        uses: actions/github-script@v7
        with:
          script: |
            /**
            * Parse a `static.json` file and return the JSON object.
            * @param {object} env - Environment packages from the Github Action (i.e. core, github, context)
            * @param {object} state - State from the Github Action (i.e. outputs)
            */
            function parse({ core }, state = {}) {
            const fs = require('fs');
            let config = {};
            try {
              config = JSON.parse(fs.readFileSync('./static.json', 'utf8'));
            } catch (e) {
              core.setFailed(`Unable to parse static.json: ${e.message}`);
            }
            // Merge GitHub Action state with the parsed static.json
            config = {
              ...config,
              _static: {
               host: {
                ...state.host,
               },
               ...config._static,
              },
            }

            try {
              validate(config);
            } catch (e) {
              core.setFailed(`Invalid static.json: ${e.message}`);
            }
            return config;
            }

            /**
            * A basic validation function for the `static.json` file.
            */
            function validate(config) {
              if (!config) {
                throw new Error('No configuration provided.');
              }
              if (!('_static' in config) || !config._static) {
                throw new Error('`_static` member not found in configuration.');
              }
              if (!config._static?.generator) {
                throw new Error('A `generator` is required in a `_static` configuration.');
              }
              if (config._static?.ecosystem && config._static?.ecosystem !== 'npm') {
                throw new Error('Unknown ecosystem provided. `npm` is currently the only official supported ecosystem.');
              }
              return true;
            }

            const utils = { parse, validate };

            return utils.parse({ core }, {
              host: {
                "base_url": "${{ steps.configure-pages.outputs.base_url }}",
                "origin": "${{ steps.configure-pages.outputs.origin }}",
                "host": "${{ steps.configure-pages.outputs.host }}",
                "base_path": "${{ steps.configure-pages.outputs.base_path }}",
              }
            });
      - name: Replacing static.json in Generator
        env:
          STATIC_JSON: ${{ steps.static.outputs.result }}
        run: |
          jq -r '.' <<<"$STATIC_JSON" > ./static.json
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
